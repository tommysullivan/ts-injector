import {IList} from "../collections/i-list";
import {Assertion} from "../chai/assertion";
import {IFuture} from "../promise/i-future";
import {IClusterUnderTest} from "../cluster-testing/i-cluster-under-test";
import {ICucumber} from "../cucumber/i-cucumber";
import {Cli} from "../cli/cli";
import {IClusterTesting} from "../cluster-testing/i-cluster-testing";
import {IInstaller} from "../installer/i-installer";
import {IMCS} from "../mcs/i-mcs";
import {IElasticsearch} from "../elasticsearch/i-elasticsearch";
import {IServiceDiscoverer} from "../cluster-testing/i-service-discoverer";
import {IGrafana} from "../grafana/i-grafana";
import {IReleasing} from "../releasing/i-releasing";
import {IVersioning} from "../versioning/i-versioning";
import {IOperatingSystems} from "../operating-systems/i-operating-systems";
import {IClusters} from "../clusters/i-clusters";
import {IESXI} from "../esxi/i-esxi";
import {IOpenTSDB} from "../open-tsdb/i-open-tsdb";
import {IPackaging} from "../packaging/i-packaging";
import {IRest} from "../rest/i-rest";
import {IConsole} from "../node-js-wrappers/i-console";
import {INodeWrapperFactory} from "../node-js-wrappers/i-node-wrapper-factory";
import {ISSHAPI} from "../ssh/i-ssh-api";
import {ITypedJSON} from "../typed-json/i-typed-json";
import {IPromiseFactory} from "../promise/i-promise-factory";
import {IErrors} from "../errors/i-errors";
import {ICollections} from "../collections/i-collections";
import {IUUIDGenerator} from "../uuid/i-uuid-generator";
import {IFileSystem} from "../node-js-wrappers/i-filesystem";
import {IProcess} from "../node-js-wrappers/i-process";
import {IFrameworkConfiguration} from "./i-framework-configuration";
import {ChaiStatic} from "../chai/chai-static";

export interface IFramework {
    frameworkConfig:IFrameworkConfiguration;
    process:IProcess;
    fileSystem:IFileSystem;
    uuidGenerator:IUUIDGenerator;
    collections:ICollections;
    errors:IErrors;
    promiseFactory:IPromiseFactory;
    typedJSON:ITypedJSON;
    sshAPI:ISSHAPI;
    nodeWrapperFactory:INodeWrapperFactory;
    chai:ChaiStatic;
    console:IConsole;
    rest:IRest;
    testRunGUID:string;
    packaging:IPackaging;
    openTSDB:IOpenTSDB;
    esxi:IESXI;
    clusters:IClusters;
    operatingSystems:IOperatingSystems;
    versioning:IVersioning;
    releasing:IReleasing;
    grafana:IGrafana;
    serviceDiscoverer:IServiceDiscoverer;
    elasticSearch:IElasticsearch;
    mcs:IMCS;
    installer:IInstaller;
    clusterTesting:IClusterTesting;
    cli:Cli;
    cucumber:ICucumber;
    clusterUnderTest:IClusterUnderTest;
    expect(target: any, message?: string):Assertion;
    expectAll<T>(target:IList<IFuture<T>>):Assertion;
    expectEmptyList<T>(list:IList<T>):void;
}