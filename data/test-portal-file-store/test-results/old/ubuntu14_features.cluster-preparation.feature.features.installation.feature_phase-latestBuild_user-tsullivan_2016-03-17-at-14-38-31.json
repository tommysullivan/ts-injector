[
  {
    "id": "Cluster-Preparation",
    "name": "Cluster Preparation",
    "description": "",
    "line": 1,
    "keyword": "Feature",
    "uri": "/Users/tsullivan/projects/private-spyglass/features/cluster-preparation.feature",
    "elements": [
      {
        "name": "Prepare Cluster for Installation",
        "id": "Cluster-Preparation;prepare-cluster-for-installation",
        "line": 4,
        "keyword": "Scenario",
        "description": "",
        "type": "scenario",
        "tags": [
          {
            "name": "@SPYG-1",
            "line": 3
          },
          {
            "name": "@prepareForInstallation",
            "line": 3
          }
        ],
        "steps": [
          {
            "keyword": "Before ",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 1167432
            },
            "match": {}
          },
          {
            "name": "the Cluster Under Test is managed by ESXI",
            "line": 5,
            "keyword": "Given ",
            "result": {
              "status": "passed",
              "duration": 462811
            },
            "match": {}
          },
          {
            "name": "the Operating Systems of each node match what is configured",
            "line": 6,
            "keyword": "And ",
            "result": {
              "status": "passed",
              "duration": 100495
            },
            "match": {}
          },
          {
            "name": "I revert the cluster to its configured \"readyForInstallation\" state",
            "line": 7,
            "keyword": "When ",
            "result": {
              "status": "passed",
              "duration": 14961147582
            },
            "match": {}
          },
          {
            "name": "I wait \"30\" seconds",
            "line": 8,
            "keyword": "And ",
            "result": {
              "status": "passed",
              "duration": 30004930448
            },
            "match": {}
          },
          {
            "name": "the cluster does not have MapR Installed",
            "line": 9,
            "keyword": "Then ",
            "result": {
              "status": "passed",
              "duration": 489993812
            },
            "match": {}
          }
        ]
      }
    ]
  },
  {
    "id": "Installation",
    "name": "Installation",
    "description": "As a Spyglass Customer\nIn order to install a Spyglass-enabled MapR Cluster\nI use one of the following installation methods",
    "line": 1,
    "keyword": "Feature",
    "uri": "/Users/tsullivan/projects/private-spyglass/features/installation.feature",
    "elements": [
      {
        "name": "Manual Installation",
        "id": "Installation;manual-installation",
        "line": 7,
        "keyword": "Scenario",
        "description": "",
        "type": "scenario",
        "tags": [
          {
            "name": "@SPYG-123",
            "line": 6
          },
          {
            "name": "@Manual",
            "line": 6
          }
        ],
        "steps": [
          {
            "keyword": "Before ",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 116684
            },
            "match": {}
          },
          {
            "name": "I follow the manual installation instructions located at \"https://github.com/mapr/private-spyglass\"",
            "line": 8,
            "keyword": "When ",
            "result": {
              "status": "pending"
            },
            "match": {}
          },
          {
            "name": "it tells me how to install, configure and run the services required for Spyglass",
            "line": 9,
            "keyword": "Then ",
            "result": {
              "status": "skipped"
            },
            "match": {}
          },
          {
            "name": "it tells me how to discover the URLs for MCS, Kibana, Grafana, OpenTSDB and ElasticSearch",
            "line": 10,
            "keyword": "And ",
            "result": {
              "status": "skipped"
            },
            "match": {}
          }
        ]
      },
      {
        "name": "Download and Run GUI Installer",
        "id": "Installation;download-and-run-gui-installer",
        "line": 13,
        "keyword": "Scenario",
        "description": "",
        "type": "scenario",
        "tags": [
          {
            "name": "@SPYG-282",
            "line": 12
          },
          {
            "name": "@mapr-setup",
            "line": 12
          }
        ],
        "steps": [
          {
            "keyword": "Before ",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 109275
            },
            "match": {}
          },
          {
            "name": "the cluster does not have MapR Installed",
            "line": 14,
            "keyword": "Given ",
            "result": {
              "status": "passed",
              "duration": 319191411
            },
            "match": {}
          },
          {
            "name": "I ssh into the node hosting \"GUI Installer\"",
            "line": 15,
            "keyword": "When ",
            "result": {
              "status": "passed",
              "duration": 1120834
            },
            "match": {}
          },
          {
            "name": "within my ssh session, I download \"/mapr-setup.sh\" to \"/tmp\" from the \"GUI Installer\" repo",
            "line": 16,
            "keyword": "And ",
            "result": {
              "status": "passed",
              "duration": 410759692
            },
            "match": {}
          },
          {
            "name": "within my ssh session, I execute \"/tmp/mapr-setup.sh -y -u [installerRepoURL] [maprCoreRepoURL] [ecosystemRepoURL]\"",
            "line": 17,
            "keyword": "And ",
            "result": {
              "status": "passed",
              "duration": 269885551252
            },
            "match": {}
          },
          {
            "name": "I wait \"15\" seconds",
            "line": 18,
            "keyword": "And ",
            "result": {
              "status": "passed",
              "duration": 15001198647
            },
            "match": {}
          },
          {
            "name": "it successfully starts the installer web server and outputs its URL to the screen",
            "line": 19,
            "keyword": "Then ",
            "result": {
              "status": "passed",
              "duration": 261632898
            },
            "match": {}
          }
        ]
      },
      {
        "name": "Use REST APIs to Install MapR with Spyglass Components",
        "id": "Installation;use-rest-apis-to-install-mapr-with-spyglass-components",
        "line": 22,
        "keyword": "Scenario",
        "description": "",
        "type": "scenario",
        "tags": [
          {
            "name": "@SPYG-282",
            "line": 21
          },
          {
            "name": "@rest-installer",
            "line": 21
          }
        ],
        "steps": [
          {
            "keyword": "Before ",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 140292
            },
            "match": {}
          },
          {
            "name": "the GUI Installer web server is running",
            "line": 23,
            "keyword": "Given ",
            "result": {
              "status": "passed",
              "duration": 31482048
            },
            "match": {}
          },
          {
            "name": "I can authenticate my GUI Installer Rest Client",
            "line": 24,
            "keyword": "And ",
            "result": {
              "status": "passed",
              "duration": 2202577082
            },
            "match": {}
          },
          {
            "name": "I specify the desired Cluster Configuration",
            "line": 25,
            "keyword": "And ",
            "result": {
              "status": "passed",
              "duration": 1074306526
            },
            "match": {}
          },
          {
            "name": "I perform Cluster Configuration Verification",
            "line": 26,
            "keyword": "When ",
            "result": {
              "status": "passed",
              "duration": 5091236725
            },
            "match": {}
          },
          {
            "name": "Cluster Configuration Verification completes without errors",
            "line": 27,
            "keyword": "Then ",
            "result": {
              "status": "passed",
              "duration": 389744
            },
            "match": {}
          },
          {
            "name": "I perform Cluster Provisioning",
            "line": 28,
            "keyword": "When ",
            "result": {
              "status": "passed",
              "duration": 5068549324
            },
            "match": {}
          },
          {
            "name": "Cluster Provisioning completes without errors",
            "line": 29,
            "keyword": "Then ",
            "result": {
              "status": "passed",
              "duration": 335960
            },
            "match": {}
          },
          {
            "name": "I perform Cluster Installation",
            "line": 30,
            "keyword": "When ",
            "result": {
              "status": "passed",
              "duration": 831197754758
            },
            "match": {}
          },
          {
            "name": "Cluster Installation completes without errors",
            "line": 31,
            "keyword": "Then ",
            "result": {
              "status": "failed",
              "duration": 58714531,
              "error_message": "\n2016-03-17 21:44:07.214: launched python script with pid 10550\n\n2016-03-17 21:44:08.431: * 21:44:08 Validating prerequisites\n===============================================================================\n=                                                                             =\n=  __  __                ____    ___              _          _  _             =\n= |  \\/  |  __ _  _ __  |  _ \\  |_ _| _ __   ___ | |_  __ _ | || |  ___  _ __ =\n= | |\\/| | / _` || '_ \\ | |_) |  | | | '_ \\ / __|| __|/ _` || || | / _ \\| '__|=\n= | |  | || (_| || |_) ||  _ <   | | | | | |\\__ \\| |_| (_| || || ||  __/| |   =\n= |_|  |_| \\__,_|| .__/ |_| \\_\\ |___||_| |_||___/ \\__|\\__,_||_||_| \\___||_|   =\n=                |_|                                                          =\n=                                                                             =\n===============================================================================\nVersion: 5.1.0.1.3.142\n\nNow running on nodes: [10.10.30.147,10.10.30.148,10.10.30.149]\n* 21:44:08 Validating prerequisites\npython script exited with 0\n\n2016-03-17 21:44:17.225: launched python script with pid 10699\n\n2016-03-17 21:44:18.137: * 21:44:18 Installing MapR\n===============================================================================\n=                                                                             =\n=  __  __                ____    ___              _          _  _             =\n= |  \\/  |  __ _  _ __  |  _ \\  |_ _| _ __   ___ | |_  __ _ | || |  ___  _ __ =\n= | |\\/| | / _` || '_ \\ | |_) |  | | | '_ \\ / __|| __|/ _` || || | / _ \\| '__|=\n= | |  | || (_| || |_) ||  _ <   | | | | | |\\__ \\| |_| (_| || || ||  __/| |   =\n= |_|  |_| \\__,_|| .__/ |_| \\_\\ |___||_| |_||___/ \\__|\\__,_||_||_| \\___||_|   =\n=                |_|                                                          =\n=                                                                             =\n===============================================================================\nVersion: 5.1.0.1.3.142\n\nNow running on all server nodes: [10.10.30.147,10.10.30.148,10.10.30.149]\n* 21:44:18 Installing MapR\n\n2016-03-17 21:44:18.728: * 21:44:18 Configuring OS prerequisites\n2016-03-17 21:44:18.842: * 21:44:18 Configuring OS prerequisites* 21:44:18 Configuring OS prerequisites\n* 21:44:18 Configuring OS prerequisites\n\n2016-03-17 21:46:22.121: * 21:46:22 Configuring OS Security* 21:46:22 Configuring OS Security\n\n2016-03-17 21:46:23.092: * 21:46:23 Installing OpenJDK if required* 21:46:23 Installing OpenJDK if required\n\n2016-03-17 21:49:48.353: * 21:49:48 Creating cluster admin account* 21:49:48 Creating cluster admin account\n\n2016-03-17 21:49:50.208: * 21:49:50 Configuring package repository* 21:49:50 Configuring package repository\n\n2016-03-17 21:49:50.975: * 21:49:50 Configuring package repository* 21:49:50 Configuring package repository\n\n2016-03-17 21:50:25.403: * 21:50:25 Installing MapR Core* 21:50:25 Installing MapR Core\n\n2016-03-17 21:52:33.807: * 21:52:33 Configuring MapR services* 21:52:33 Configuring MapR services\n\n2016-03-17 21:52:43.095: * 21:52:43 Configuring disks for MapR-FS* 21:52:43 Configuring disks for MapR-FS\n\n2016-03-17 21:53:02.727: * 21:53:02 Starting MapR services* 21:53:02 Starting MapR services\n\n2016-03-17 21:53:12.296: * 21:53:12 Finalizing cluster configuration* 21:53:12 Finalizing cluster configuration\nfatal: [10.10.30.148] => Traceback (most recent call last):\n  File \"/opt/mapr/installer/build/installer/lib/python2.7/site-packages/ansible/runner/__init__.py\", line 586, in _executor\n    exec_rc = self._executor_internal(host, new_stdin)\n  File \"/opt/mapr/installer/build/installer/lib/python2.7/site-packages/ansible/runner/__init__.py\", line 789, in _executor_internal\n    return self._executor_internal_inner(host, self.module_name, self.module_args, inject, port, complex_args=complex_args)\n  File \"/opt/mapr/installer/build/installer/lib/python2.7/site-packages/ansible/runner/__init__.py\", line 1036, in _executor_internal_inner\n    result = handler.run(conn, tmp, module_name, module_args, inject, complex_args)\n  File \"/opt/mapr/installer/build/installer/lib/python2.7/site-packages/ansible/runner/action_plugins/normal.py\", line 62, in run\n    return self.runner._execute_module(conn, tmp, module_name, module_args, inject=inject, complex_args=complex_args)\n  File \"/opt/mapr/installer/build/installer/lib/python2.7/site-packages/ansible/runner/__init__.py\", line 474, in _execute_module\n    tmp = self._make_tmp_path(conn)\n  File \"/opt/mapr/installer/build/installer/lib/python2.7/site-packages/ansible/runner/__init__.py\", line 1293, in _make_tmp_path\n    result = self._low_level_exec_command(conn, cmd, None, sudoable=False)\n  File \"/opt/mapr/installer/build/installer/lib/python2.7/site-packages/ansible/runner/__init__.py\", line 1174, in _low_level_exec_command\n    in_data=in_data)\n  File \"/opt/mapr/installer/build/installer/lib/python2.7/site-packages/ansible/runner/connection_plugins/ssh.py\", line 308, in exec_command\n    self._send_password()\n  File \"/opt/mapr/installer/build/installer/lib/python2.7/site-packages/ansible/runner/connection_plugins/ssh.py\", line 144, in _send_password\n    os.write(self.wfd, \"%s\\n\" % self.password)\nOSError: [Errno 32] Broken pipe\n\n\n2016-03-17 21:56:38.081: * 21:56:38 Configuring database* 21:56:38 Configuring database\n\n2016-03-17 21:56:54.476: * 21:56:54 Installing MapR Ecosystem* 21:56:54 Installing MapR Ecosystem\nHost: 10.10.30.148 is unreachable\nControl and server nodes have failures. Fix the failures and re-run the installation. For more information refer to the installer log at /opt/mapr/installer/logs/mapr-installer.log\nExiting with 1\npython script exited with 1\n"
            },
            "match": {}
          }
        ]
      },
      {
        "name": "Use Web Interface to Install MapR with Spyglass Components",
        "id": "Installation;use-web-interface-to-install-mapr-with-spyglass-components",
        "line": 34,
        "keyword": "Scenario",
        "description": "",
        "type": "scenario",
        "tags": [
          {
            "name": "@SPYG-282",
            "line": 33
          },
          {
            "name": "@Manual",
            "line": 33
          }
        ],
        "steps": [
          {
            "keyword": "Before ",
            "hidden": true,
            "result": {
              "status": "passed",
              "duration": 374338
            },
            "match": {}
          },
          {
            "name": "the GUI Installer web server is running",
            "line": 35,
            "keyword": "Given ",
            "result": {
              "status": "passed",
              "duration": 8973617
            },
            "match": {}
          },
          {
            "name": "I can authenticate my browser using the GUI Installer Login Page",
            "line": 36,
            "keyword": "And ",
            "result": {
              "status": "pending"
            },
            "match": {}
          },
          {
            "name": "I indicate I want a basic installation with Spyglass components and their dependencies only",
            "line": 37,
            "keyword": "When ",
            "result": {
              "status": "skipped"
            },
            "match": {}
          },
          {
            "name": "the website indicates that the installation succeeds within \"5\" minutes",
            "line": 38,
            "keyword": "Then ",
            "result": {
              "status": "skipped"
            },
            "match": {}
          }
        ]
      }
    ]
  }
]